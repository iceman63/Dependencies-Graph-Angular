name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.X'

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
      
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn --frozen-lockfile
      
    - name: Build
      run: yarn ng build --prod --aot --no-progress

    # Docker Image

    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@v1.1.0

    - name: Build the Docker image
      run: docker build . --tag dependencies-graph-view:${{ steps.package-version.outputs.current-version }}

    - name: Docker login
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Docker push
      run: | 
        docker tag dependencies-graph-view:${{ steps.package-version.outputs.current-version }} docker.pkg.github.com/xclemence/dependencies-graph-view/dependencies-graph-view:${{ steps.package-version.outputs.current-version }}
        docker push docker.pkg.github.com/xclemence/dependencies-graph-view/dependencies-graph-view:${{ steps.package-version.outputs.current-version }}
    
    # Release Creation
    - uses: olegtarasov/get-tag@v2
      id: tagName

    - name: Read Release Notes
      id: release_notes
      uses: juliangruber/read-file-action@v1
      with:
        path: ./doc/releases/${{ steps.tagName.outputs.tag }}.md

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.release_notes.outputs.content }}
        draft: false
        prerelease: false
